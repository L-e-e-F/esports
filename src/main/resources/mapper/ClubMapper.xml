<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ClubMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.Club">
        <id column="club_id" jdbcType="BIGINT" property="clubId"/>
        <result column="club_name" jdbcType="VARCHAR" property="clubName"/>
        <result column="club_img" jdbcType="VARCHAR" property="clubImg"/>
        <result column="club_coach" jdbcType="VARCHAR" property="clubCoach"/>
        <result column="club_group" jdbcType="VARCHAR" property="clubGroup"/>
        <result column="club_points" jdbcType="INTEGER" property="clubPoints"/>
    </resultMap>
    <sql id="Base_Column_List">
        club_id
        , club_name, club_img, club_coach, club_group, club_points
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from club
        where club_id = #{clubId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from club
        where club_id = #{clubId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="club_id" keyProperty="clubId" parameterType="com.example.entity.Club"
            useGeneratedKeys="true">
        insert into club (club_name, club_img, club_coach,
                          club_group, club_points)
        values (#{clubName,jdbcType=VARCHAR}, #{clubImg,jdbcType=VARCHAR}, #{clubCoach,jdbcType=VARCHAR},
                #{clubGroup,jdbcType=VARCHAR}, #{clubPoints,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="club_id" keyProperty="clubId" parameterType="com.example.entity.Club"
            useGeneratedKeys="true">
        insert into club
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clubName != null">
                club_name,
            </if>
            <if test="clubImg != null">
                club_img,
            </if>
            <if test="clubCoach != null">
                club_coach,
            </if>
            <if test="clubGroup != null">
                club_group,
            </if>
            <if test="clubPoints != null">
                club_points,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clubName != null">
                #{clubName,jdbcType=VARCHAR},
            </if>
            <if test="clubImg != null">
                #{clubImg,jdbcType=VARCHAR},
            </if>
            <if test="clubCoach != null">
                #{clubCoach,jdbcType=VARCHAR},
            </if>
            <if test="clubGroup != null">
                #{clubGroup,jdbcType=VARCHAR},
            </if>
            <if test="clubPoints != null">
                #{clubPoints,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Club">
        update club
        <set>
            <if test="clubName != null">
                club_name = #{clubName,jdbcType=VARCHAR},
            </if>
            <if test="clubImg != null">
                club_img = #{clubImg,jdbcType=VARCHAR},
            </if>
            <if test="clubCoach != null">
                club_coach = #{clubCoach,jdbcType=VARCHAR},
            </if>
            <if test="clubGroup != null">
                club_group = #{clubGroup,jdbcType=VARCHAR},
            </if>
            <if test="clubPoints != null">
                club_points = #{clubPoints,jdbcType=INTEGER},
            </if>
        </set>
        where club_id = #{clubId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.entity.Club">
        update club
        set club_name   = #{clubName,jdbcType=VARCHAR},
            club_img    = #{clubImg,jdbcType=VARCHAR},
            club_coach  = #{clubCoach,jdbcType=VARCHAR},
            club_group  = #{clubGroup,jdbcType=VARCHAR},
            club_points = #{clubPoints,jdbcType=INTEGER}
        where club_id = #{clubId,jdbcType=BIGINT}
    </update>
    <select id="selectALL" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from club
        where club_group = #{group,jdbcType=VARCHAR}
        <if test="name != ''">
            AND club_name = #{name,jdbcType=VARCHAR}
        </if>
        ORDER BY
        club_points DESC
    </select>
    <select id="selectEventClub" resultMap="BaseResultMap">
        select c.*
        FROM event_club ec
                 LEFT JOIN club c
                           ON ec.club_id = c.club_id
        WHERE ec.event_id = #{id,jdbcType=BIGINT}
    </select>
    <select id="ALL" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from club
        <if test="group != ''">
            where club_group = #{group,jdbcType=VARCHAR}
        </if>
    </select>
    <update id="updateClubPoints" parameterType="java.lang.String">
        UPDATE club
        set club_points = club_points + 1
        where club_name = #{club,jdbcType=VARCHAR}
    </update>
    <select id="follow" resultMap="BaseResultMap">
        select c.*
        from follow f
            LEFT JOIN club c
                on f.club_id = c.club_id
            LEFT JOIN all_user au
                on au.user_id = f.user_id
        where au.user_id = #{user,jdbcType=BIGINT}
        <if test="club != ''">
            and c.club_name = #{club,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectUserClub" resultMap="BaseResultMap">
        select c.*
        from club c
            LEFT JOIN user_club uc
                on uc.club_id =c.club_id
        where uc.user_id = #{user,jdbcType=BIGINT}
          AND c.club_group = #{group,jdbcType=VARCHAR}
        <if test="name != ''">
            AND club_name = #{name,jdbcType=VARCHAR}
        </if>
        ORDER BY
        club_points DESC
    </select>
    <select id="selectUserClubList" resultMap="BaseResultMap">
        select c.*
        from club c
        LEFT JOIN user_club uc
        on uc.club_id =c.club_id
        where uc.user_id = #{user,jdbcType=BIGINT}
        <if test="group != ''">
        AND c.club_group = #{group,jdbcType=VARCHAR}
        </if>
        ORDER BY
        club_points DESC
    </select>
    <insert id="insertUserClub" parameterType="java.lang.Long">
        insert into user_club(`user_id`,`club_id`)
        values (#{user,jdbcType=BIGINT}, #{club,jdbcType=BIGINT})
    </insert>
    <delete id="deleteUserClub" parameterType="java.lang.Long">
        delete from user_club
        where `user_id` = #{user,jdbcType=BIGINT}
          AND `club_id` = #{club,jdbcType=BIGINT}
    </delete>
    <select id="selectNotUserClub" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from club
        where
              NOT EXISTS
                  (select 1
                  from user_club uc
                      LEFT JOIN club c
                          on uc.club_id = c.club_id
                  where c.club_id = club.club_id)
        AND club_group = #{group,jdbcType=VARCHAR}
        <if test="name != ''">
            AND club_name = #{name,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>